language: cpp

matrix:
  include:
    # Clang
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_DEBUG=1"

      script: ninja && ./rst_tests

    # Clang Exceptions + RTTI
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_CXX_EXCEPTIONS=ON -DRST_ENABLE_CXX_RTTI=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_DEBUG=1"

      script: ninja && ./rst_tests

    # Clang ASAN
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11 && ASAN_OPTIONS=strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_ASAN=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_DEBUG=1"

      script: ninja && ./rst_tests

    # Clang TSAN
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_TSAN=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_DEBUG=1"

      script: ninja && ./rst_tests

    # Clang UBSAN
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_UBSAN=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -D_LIBCPP_DEBUG=1"

      script: ninja && ./rst_tests

    # Clang Release
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - clang-11
            - libc++-11-dev
            - libc++abi-11-dev
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-stdlib=libc++"

      script: ninja

    # GCC
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - g++-10
            - gcc-10
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # GCC Exceptions + RTTI
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - g++-10
            - gcc-10
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_CXX_EXCEPTIONS=ON -DRST_ENABLE_CXX_RTTI=ON -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # GCC Release
    - os: linux
      dist: focal
      addons:
        apt:
          packages:
            - g++-10
            - gcc-10
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release

      script: ninja

    # OS X Clang
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - ninja
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # OS X Clang Exceptions + RTTI
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - ninja
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_CXX_EXCEPTIONS=ON -DRST_ENABLE_CXX_RTTI=ON -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # OS X Clang Release
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - ninja
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release

      script: ninja

    # OS X GCC
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - gcc@10
            - ninja
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # OS X GCC Exceptions + RTTI
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - gcc@10
            - ninja
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DRST_ENABLE_CXX_EXCEPTIONS=ON -DRST_ENABLE_CXX_RTTI=ON -DCMAKE_BUILD_TYPE=Debug

      script: ninja && ./rst_tests

    # OS X GCC Release
    - os: osx
      osx_image: xcode12u
      addons:
        homebrew:
          update: true
          packages:
            - gcc@10
            - ninja
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

      before_install:
          - eval "${MATRIX_EVAL}"

      before_script:
        - mkdir build
        - cd build
        - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release

      script: ninja

    # MSVC 2019 Win32
    - os: windows
      before_script:
        - choco install visualstudio2019buildtools
        - choco install visualstudio2019-workload-vctools
        - mkdir build
        - cd build
        - cmake .. -G"Visual Studio 16 2019" -A Win32

      script: cmake --build . && ./Debug/rst_tests.exe

    # MSVC 2019 Win32 Release
    - os: windows
      before_script:
        - choco install visualstudio2019buildtools
        - choco install visualstudio2019-workload-vctools
        - mkdir build
        - cd build
        - cmake .. -G"Visual Studio 16 2019" -A Win32

      script: cmake --build . --config Release

    # MSVC 2019 Win64
    - os: windows
      before_script:
        - choco install visualstudio2019buildtools
        - choco install visualstudio2019-workload-vctools
        - mkdir build
        - cd build
        - cmake .. -G"Visual Studio 16 2019" -A x64

      script: cmake --build . && ./Debug/rst_tests.exe

    # MSVC 2019 Win64 Release
    - os: windows
      before_script:
        - choco install visualstudio2019buildtools
        - choco install visualstudio2019-workload-vctools
        - mkdir build
        - cd build
        - cmake .. -G"Visual Studio 16 2019" -A x64

      script: cmake --build . --config Release
